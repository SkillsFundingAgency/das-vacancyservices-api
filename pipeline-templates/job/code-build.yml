jobs:
- job: 'CodeBuild'
  pool:
    name: 'DAS - Continuous Integration'
    demands: 
    - Agent.OS -equals Windows_NT
  workspace:
    clean: all

  variables:
    - group: BUILD Management Resources
    - name: buildConfiguration 
      value: 'release'
    - name: buildPlatform
      value: 'any cpu'
    - name: solution
      value: 'src/Esfa.Vacancy.Api.sln'

  steps:
  - task: gittools.gitversion.gitversion-task.GitVersion@5
    displayName: GitVersion
    inputs:
      updateAssemblyInfo: true

  - task: SonarCloudPrepare@1
    displayName: Prepare SonarCloud analysis configuration
    condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
    inputs:
      SonarCloud: ESFA - SonarCloud
      organization: $(SonarCloudOrganisationKey)
      scannerMode: MSBuild
      projectName: "$(Build.DefinitionName)"
      projectKey: SkillsFundingAgency_das-vacancyservices-api

  - task: NuGetInstaller@2
    displayName: 'NuGet restore' 
    inputs:
      solution: '$(solution)'

  - task: VSBuild@1
    displayName: 'Build solution'
    inputs:
      solution: '$(solution)'
      vsVersion: 15.0
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'
      clean: true

  - task: VSBuild@1
    displayName: 'Package Register API'
    inputs:
      solution: 'src/Esfa.Vacancy.Manage.Api/Esfa.Vacancy.Manage.Api.csproj'
      vsVersion: 15.0
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
      platform: 'anycpu'
      configuration: '$(BuildConfiguration)'
      clean: true

  - task: VSBuild@1
    displayName: 'Package Manage API'
    inputs:
      solution: 'src/Esfa.Vacancy.Register.Api/Esfa.Vacancy.Register.Api.csproj'
      vsVersion: 15.0
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
      platform: 'anycpu'
      configuration: '$(BuildConfiguration)'
      clean: true

  - task: VSTest@2
    displayName: 'Test Assemblies'
    inputs:
      testAssemblyVer2: '**/bin/**/*UnitTests.dll'
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'

  - task: SonarCloudAnalyze@1
    displayName: Run SonarCloud analysis
    condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))

  - task: SonarCloudPublish@1
    displayName: Publish SonarCloud analysis results on build summary
    condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
    inputs:
      pollingTimeoutSec: '300'

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      Contents: |
        azure/**
        integration-tests/**
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
