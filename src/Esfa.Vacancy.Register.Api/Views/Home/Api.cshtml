@using Esfa.Vacancy.Register.Api.Extensions
@{
    var protocol = Request.IsSecureConnection ? "https" : "http";
}

<main id="content" role="main">
    <div class="grid-row">
        <div class="column-full">

            <h2 class="heading-large">Register</h2>

            <table>
                <tbody>
                <tr>
                    <th>Swagger API definition</th>
                    <td><a href="/swagger/docs/v1"><img src="http://online.swagger.io/validator?url=@Url.Content("~/swagger/docs/v1", true)" /></a></td>
                </tr>
                </tbody>
            </table>

            <h2 class="heading-large">Query the API</h2>
            <div class="swagger-section">
                <!--<div id='header'>
                    <div class="swagger-ui-wrap">
                        <a id="logo" href="http://swagger.io">swagger</a>
                        <form id='api_selector'>
                            <div class='input'><input placeholder="http://example.com/api" id="input_baseUrl" name="baseUrl" type="text"/></div>
                            <div class='input'><input placeholder="api_key" id="input_apiKey" name="apiKey" type="text"/></div>
                            <div class='input'><a id="explore" href="#" data-sw-translate>Explore</a></div>
                        </form>
                    </div>
                </div>
                <div id="message-bar" class="swagger-ui-wrap" data-sw-translate>&nbsp;</div>-->
                <div id="swagger-ui-container" class="swagger-ui-wrap"></div>
            </div>

            <h2 class="heading-large"> </h2>
            <h2 class="heading-large">C# client usage</h2>
            <table>
                <tbody>
                <tr>
                    <th><a href="https://www.nuget.org/packages/ESFA.Vacancy.Api.Client">ESFA.Vacancy.Api.Client</a></th>
                    <td><a href="https://www.nuget.org/packages/ESFA.Vacancy.Api.Client"><img src="https://img.shields.io/nuget/v/ESFA.Vacancy.Api.Client.svg"/></a></td>
                </tr>
                </tbody>
            </table>
            <h3 class="heading-medium">Basic</h3>
            <pre>
            <code class="language-csharp">
using(var client = new VacancyApiClient())
{
    var vacancy = client.Get(11112222);
}
                </code>
            </pre>

            <h3 class="heading-medium">Using StructureMap</h3>
            <pre>
            <code class="language-csharp">
For&lt;IVacancyApiClient&gt;().Use&lt;VacancyApiClient&gt;();
                </code>
            </pre>

            <h2 class="heading-medium">Help</h2>
            <p>You can contact the National Apprenticeship Service for advice or help using the service.</p>
            <div class="contact">
                <p>
                    <strong>National Apprenticeship Service</strong><br>
                    Telephone: 0800 015 0600
                    <a href="https://www.gov.uk/call-charges">Find out about call charges</a>
                </p>
            </div>
        </div>
    </div>
</main>
@section footerJS
{
    <script type="text/javascript">
        $(function () {

            var url = window.location.search.match(/url=([^&]+)/);

            if (url && url.length > 1) {
                url = decodeURIComponent(url[1]);
            } else {
                url = "http://petstore.swagger.io/v2/swagger.json";
            }

            // Get Swashbuckle config into JavaScript
            function arrayFrom(configString) {
                return (configString !== "") ? configString.split('|') : [];
            }

            function stringOrNullFrom(configString) {
                return (configString !== "null") ? configString : null;
            }

            window.swashbuckleConfig = {
                rootUrl: '@protocol://' + document.location.host,
                discoveryPaths: arrayFrom('swagger/docs/v1'),
                booleanValues: arrayFrom('true|false'),
                validatorUrl: stringOrNullFrom(''),
                customScripts: arrayFrom(''),
                docExpansion: 'list',
                oAuth2Enabled: ('false' == 'true'),
                oAuth2ClientId: '',
                oAuth2ClientSecret: '',
                oAuth2Realm: '',
                oAuth2AppName: '',
                oAuth2ScopeSeperator: ' ',
                oAuth2AdditionalQueryStringParams: JSON.parse('{}')
            };

            // Pre load translate...
            if (window.SwaggerTranslator) {
                window.SwaggerTranslator.translate();
            }
            window.swaggerUi = new SwaggerUi({
                url: swashbuckleConfig.rootUrl + "/" + swashbuckleConfig.discoveryPaths[0],
                dom_id: "swagger-ui-container",
                booleanValues: swashbuckleConfig.booleanValues,
                onComplete: function (swaggerApi, swaggerUi) {
                    if (typeof initOAuth == "function" && swashbuckleConfig.oAuth2Enabled) {
                        initOAuth({
                            clientId: swashbuckleConfig.oAuth2ClientId,
                            clientSecret: swashbuckleConfig.oAuth2ClientSecret,
                            realm: swashbuckleConfig.oAuth2Realm,
                            appName: swashbuckleConfig.oAuth2AppName,
                            scopeSeparator: swashbuckleConfig.oAuth2ScopeSeperator,
                            additionalQueryStringParams: swashbuckleConfig.oAuth2AdditionalQueryStringParams
                        });
                    }

                    if (window.SwaggerTranslator) {
                        window.SwaggerTranslator.translate();
                    }

                    $('pre code')
                        .each(function (i, e) {
                            hljs.highlightBlock(e)
                        });

                    //addApiKeyAuthorization();

                    window.swaggerApi = swaggerApi;
                    _.each(swashbuckleConfig.customScripts,
                        function (script) {
                            $.getScript(script);
                        });
                },
                onFailure: function (data) {
                    log("Unable to Load SwaggerUI");
                },
                docExpansion: swashbuckleConfig.docExpansion,
                jsonEditor: false,
                apisSorter: null, // default to server
                defaultModelRendering: 'schema',
                showRequestHeaders: false
            });

            if (window.swashbuckleConfig.validatorUrl !== '')
                window.swaggerUi.options.validatorUrl = window.swashbuckleConfig.validatorUrl;

            function addApiKeyAuthorization() {
                var key = encodeURIComponent($('#input_apiKey')[0].value);
                if (key && key.trim() != "") {
                    var apiKeyAuth = new SwaggerClient.ApiKeyAuthorization("api_key", key, "query");
                    window.swaggerUi.api.clientAuthorizations.add("api_key", apiKeyAuth);
                    log("added key " + key);
                }
            }

            $('#input_apiKey').change(addApiKeyAuthorization);

            // if you have an apiKey you would like to pre-populate on the page for demonstration purposes...
            /*
              var apiKey = "myApiKeyXXXX123456789";
              $('#input_apiKey').val(apiKey);
            */

            window.swaggerUi.load();

            function log() {
                if ('console' in window) {
                    console.log.apply(console, arguments);
                }
            }
        });
    </script>
}
